= form_for @user do |f|
  - if @user.errors.any?
    #error_explanation
      h2 = "#{pluralize(@user.errors.count, "error")} prohibited this user from being saved:"
      ul
        - @user.errors.full_messages.each do |message|
          li = message

  .row
    .col-9
      .form-group
        = f.label "Nome"
        = f.text_field :name, class: "form-control"
    .col-3
      .form-group
        = f.label :cpf
        = f.text_field :cpf, class: "form-control"
  .row
    .col-4
      .form-group
        = f.label "Data de nascimento"
        = f.date_field :birth_date, class: "form-control", value: @user.birth_date
    .col-4
      .form-group
        = f.label "Salário"
        = f.text_field :wage, class: "form-control"
    .col-4
      .form-group
        = f.label "Desconto INSS"
        = f.text_field :deduction, class: "form-control" , readonly: true, value: @user.deduction
  .row          
    .col-6
      .form-group
        = f.label "Telefone pessoal"
        = f.number_field :telephone_1, class: "form-control"
    .col-6
      .form-group
        = f.label "Telefone referencia"
        = f.number_field :telephone_2, class: "form-control"
  = f.fields_for :address do |f2|
    .row
      .col-10
        .form-group
          = f2.label "Logradouro"
          = f2.text_field :street, class: "form-control"
      .col-2
        .form-group
          = f2.label "Número"
          = f2.text_field :number, class: "form-control"
    .row
      .col-3
        .form-group
          = f2.label "Bairro"
          = f2.text_field :neighborhood, class: "form-control"
      .col-3
        .form-group
          = f2.label "Cidade"
          = f2.text_field :city, class: "form-control"
      .col-3
        .form-group
          = f2.label "Estado"
          = f2.text_field :state, class: "form-control"
      .col-3
        .form-group
          = f2.label "CEP"
          = f2.text_field :zipcode, class: "form-control"
  br
  .actions
    = f.submit "Salvar", class: "btn btn-success"
    = link_to 'Voltar', users_path, class: "btn btn-warning"

= javascript_include_tag "users"

javascript:
  function processData(action, data, onComplete) {
    let link = null;
    let json = null;

    switch (action) {
      case "CALCULATE_DEDUCTION":
        link = "calculate_deduction";
        json = data;
        break;      
    }
    jQuery.post( link, json, function( dataReceiv ) {      
        onComplete(dataReceiv);
    }, "json").fail(function(e) {
        alert("Ocorreu um erro durante este processo.");
    });
  }  

  jQuery(document).ready(function() {
    jQuery("#user_wage").keyup(function() {
      let wage = parseFloat(String(jQuery("#user_wage").val()).convertCurrencyBrToUs());
      if (!isNaN(wage)) {
        
        processData("CALCULATE_DEDUCTION", {wage: wage}, function(data) {
          jQuery("#user_deduction").val(data["deduction"].convertCurrencyUsToBr());
        })
      } else {

      }
    });    
  });
  